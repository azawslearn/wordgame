trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'service_principal_for_azure'
  resourceGroupName: 'wordApp'
  resourceGroupLocation: 'Eastus'

stages:
- stage: CreateResourceGroup
  jobs:
  - job: CreateResourceGroup
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az group create --name $(resourceGroupName) --location $(resourceGroupLocation)

- stage: DeployInfrastructure
  dependsOn: CreateResourceGroup
  jobs:
  - job: DeployBicep
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) --template-file $(Build.Repository.LocalPath)/bicep/main.bicep





- stage: GenerateAndRunAnsible
  jobs:
  - job: GenerateAndRunAnsible
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Fetch IPs
          vm1IP=$(az network public-ip show --resource-group $(resourceGroupName) --name mysq3PublicIP --query 'ipAddress' --output tsv)
          vm2IP=$(az network public-ip show --resource-group $(resourceGroupName) --name mysq3PublicIP2 --query 'ipAddress' --output tsv)
          
          # Generate inventory.ini
          echo "[app]" > inventory.ini
          echo "$vm1IP ansible_ssh_user=azureuser ansible_ssh_pass=P@ssw0rd! ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory.ini
          echo "" >> inventory.ini
          echo "[mysql]" >> inventory.ini
          echo "$vm2IP ansible_ssh_user=azureuser ansible_ssh_pass=P@ssw0rd! ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory.ini
          
          #setting up env variable
          sshpass -p 'P@ssw0rd!' ssh -o StrictHostKeyChecking=no azureuser@$vm1IP "echo 'export VM2_IP=$vm2IP' >> ~/.bashrc"

          # Generate variables.yml
          echo "vm1IP: $vm1IP" > variables.yml




    - script: |
        sudo apt update
        sudo apt install -y ansible

    - script: ansible-playbook -i inventory.ini ansible/1_install_mysql.yml
      displayName: 'Run Ansible Playbook to Install MySQL'

    - script: sleep 120  # Wait for 2 minutes
      displayName: 'Wait 2 minutes for MySQL to settle'

    - script: ansible-playbook -i inventory.ini -e @variables.yml ansible/2_install_app.yml
      displayName: 'Run Ansible Playbook to Install App'


